<head>
    <meta charset="utf-8" />
    <title>Add an animated icon to the map</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.11.1/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.11.1/mapbox-gl.css" rel="stylesheet" />
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 100px;
            bottom: 0;
            width: 30%;
            height: 30%;
        }
    </style>
</head>

<body>
    <div id="map"></div>

    <script>
        function wait(ms) {
            var start = new Date().getTime();
            var end = start;
            while (end < start + ms) {
                end = new Date().getTime();
            }
        }

        let custlon, custlat, deliverylon, deliverylat;
        var getlocation = function (priceId) {
            return fetch("/getlocation", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function (result) {
                return result.json();
            });
        };
        getlocation("").then(function (data) {
            // Call Stripe.js method to redirect to the new Checkout page
            custlon = data.custlon;
            custlat = data.custlat;
            deliverylon = data.deliverylon;
            deliverylat = data.deliverylat;
            console.log(data);
        }).then(() => {
            mapboxgl.accessToken = 'pk.eyJ1IjoiamhsZWU0MDg0IiwiYSI6ImNrZDJyOWo5OTBsYmYyd255c2plMHVxNWEifQ.s6h4fZHiLCpRM-sHNODusg';
            var map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v9',
                center: [deliverylon, deliverylat],
                zoom: 9
            });

            var size = 200;

            // implementation of CustomLayerInterface to draw a pulsing dot icon on the map
            // see https://docs.mapbox.com/mapbox-gl-js/api/#customlayerinterface for more info
            var pulsingDot = {
                width: size,
                height: size,
                data: new Uint8Array(size * size * 4),

                // get rendering context for the map canvas when layer is added to the map
                onAdd: function () {
                    var canvas = document.createElement('canvas');
                    canvas.width = this.width;
                    canvas.height = this.height;
                    this.context = canvas.getContext('2d');
                },

                // called once before every frame where the icon will be used
                render: function () {
                    var duration = 1000;
                    var t = (performance.now() % duration) / duration;

                    var radius = (size / 2) * 0.3;
                    var outerRadius = (size / 2) * 0.7 * t + radius;
                    var context = this.context;

                    // draw outer circle
                    context.clearRect(0, 0, this.width, this.height);
                    context.beginPath();
                    context.arc(
                        this.width / 2,
                        this.height / 2,
                        outerRadius,
                        0,
                        Math.PI * 2
                    );
                    context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';
                    context.fill();

                    // draw inner circle
                    context.beginPath();
                    context.arc(
                        this.width / 2,
                        this.height / 2,
                        radius,
                        0,
                        Math.PI * 2
                    );
                    context.fillStyle = 'rgba(255, 100, 100, 1)';
                    context.strokeStyle = 'white';
                    context.lineWidth = 2 + 4 * (1 - t);
                    context.fill();
                    context.stroke();

                    // update this image's data with data from the canvas
                    this.data = context.getImageData(
                        0,
                        0,
                        this.width,
                        this.height
                    ).data;

                    // continuously repaint the map, resulting in the smooth animation of the dot
                    map.triggerRepaint();

                    // return `true` to let the map know that the image was updated
                    return true;
                }
            };

            map.on('load', function () {
                map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });

                map.addSource('points', {
                    'type': 'geojson',
                    'data': {
                        'type': 'FeatureCollection',
                        'features': [
                            {
                                'type': 'Feature',
                                'geometry': {
                                    'type': 'Point',
                                    'coordinates': [deliverylon, deliverylat]
                                }
                            }
                        ]
                    }
                });
                map.addLayer({
                    'id': 'points',
                    'type': 'symbol',
                    'source': 'points',
                    'layout': {
                        'icon-image': 'pulsing-dot'
                    }
                });
                var marker = new mapboxgl.Marker()
                    .setLngLat([custlon, custlat])
                    .addTo(map);
            });
        })
        
    </script>

</body>